class User is subclass of Person
types
public string = seq of char;
public Address :: address : string
									street : string
								  zip_code: string
							 	  country : string;
	--inv a == '-' in Address.zip-code;
	
values
instance variables
private email : string;
private address: Address;

operations
public User: string * User`Address ==> User
User(em, addr) == (email:=em; address:=addr; return self);

pure public getEmail: () ==> string
getEmail() == return email 
post RESULT = email;

pure public getAddress: () ==> Address
getAddress() == return address
post RESULT = address;

public setPersonInfo: string * Gender * nat ==> ()
setPersonInfo(na, ge, ag) == (name := na; gender := ge; age:=ag;)
post name = na and gender = ge and age = ag;

public setEmail: string ==> string
setEmail(newEmail) == (email:=newEmail; return email;)
pre newEmail <> email
post email = newEmail;

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end User
