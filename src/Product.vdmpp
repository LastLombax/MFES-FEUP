class Product

types
public string = seq of char;

instance variables
private name : string;
private price : real := 0.1;
private description : string;
private quantity: nat;
private store: Store;
private orders : set of Order := {};

inv price >= 0.0 and quantity > 0;

operations
public Product: string * real * string * nat ==> Product
Product(na, pri, des, qty) == (name := na; price := pri; description:=des; quantity := qty; return self)
pre price > 0;

public addStock: nat ==> ()
addStock(numberUnits) == ( 
quantity := quantity + numberUnits;
)
pre numberUnits >= 0;

public removeStock: nat ==> nat
removeStock(numberUnits) == ( 
quantity := quantity - numberUnits;
return quantity;
)
pre numberUnits > 0 
post RESULT = quantity;

pure public getName: () ==> string
getName() == return name 
post RESULT = name;

pure public getPrice: () ==> real
getPrice() == return price 
post RESULT = price;

pure public getDescription: () ==> string
getDescription() == return description 
post RESULT = description;

pure public getStock: () ==> nat
getStock() == return quantity 
post RESULT = quantity;

pure public getStore: () ==> Store
getStore() == return store
post RESULT = store;

public setStore: Store ==> int
setStore(storeOfProduct) == (store := storeOfProduct; return 1;);


functions

end Product