class Order
types
public string = seq of char;
public State = <INIT> | <READY_FOR_DELIVER> | <CLOSED> ;
values
-- TODO Define values here
instance variables
private identifier:  int;
private totalCost : real;
private products : seq of Product;
private courier : [Courier];
private user : User;
private state: State;

operations
public Order: User ==> Order
Order(user_reference) == (
state := <INIT>;
identifier := 100;
user := user_reference; 
return self
);

public getId: () ==> int
getId() == return identifier;

public getTotalCost: () ==> real
getTotalCost() == return totalCost;

public getProducts: () ==> seq of Product
getProducts() == return products;

public getCourier: () ==> Courier
getCourier() == return courier;

public getUser: () ==> User
getUser() == return user;

public setState: State ==> State
setState(newState) == (state:=newState; return state;);

public getState: () ==> State
getState() == return state;

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Order